version: "3.8"

services:
  # üêá RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - micro_network

  # üçÉ MongoDB
  mymongodb:
    image: mongo:7.0
    container_name: mymongodb
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - micro_network

  # üö™ API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - AUTH_SERVICE_URL=http://auth:3000
      - PRODUCT_SERVICE_URL=http://product:3001
      - ORDER_SERVICE_URL=http://order:3002
      - JWT_SECRET=secret
      - LOG_LEVEL=debug
    depends_on:
      - auth
      - order
      - product
    networks:
      - micro_network

  # üë§ Auth Service
  auth:
    build: ./auth
    container_name: auth
    environment:
      - MONGODB_AUTH_URI=mongodb://mymongodb:27017/auth_db
      - JWT_SECRET=secret
      - RABBITMQ_URL=amqp://rabbitmq:5672  # ‚úÖ TH√äM PORT
    depends_on:
      - mymongodb
      - rabbitmq
    ports:
      - "3000:3000"
    networks:
      - micro_network

  # üì¶ Product Service
  product:
    build: ./product
    container_name: product
    environment:
      - MONGODB_PRODUCT_URI=mongodb://mymongodb:27017/product_db
      - RABBITMQ_URL=amqp://rabbitmq:5672  # ‚úÖ TH√äM PORT
      - JWT_SECRET=secret
    depends_on:
      - mymongodb
      - rabbitmq
    ports:
      - "3001:3001"
    networks:
      - micro_network
    command: sh -c "sleep 10 && npm start"  # ‚úÖ TH√äM COMMAND ƒê·ªÇ CH·ªú MONGODB

  # üßæ Order Service
  order:
    build: ./order
    container_name: order
    environment:
      - MONGODB_ORDER_URI=mongodb://mymongodb:27017/order_db
      - RABBITMQ_URL=amqp://rabbitmq:5672  # ‚úÖ TH√äM PORT
      - JWT_SECRET=secret
    depends_on:
      - mymongodb
      - rabbitmq
    ports:
      - "3002:3002"
    networks:
      - micro_network
    command: sh -c "sleep 10 && npm start"

volumes:
  mongo_data:

networks:
  micro_network:
    driver: bridge